<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>com.topband</groupId>
    <artifactId>dubbo-shop-hyj</artifactId>
    <version>7.0.0.100</version>
    <modules>
        <module>shop-common</module>
        <module>shop-provider</module>
        <module>shop-consumer</module>
        <module>shop-email</module>
    </modules>
    <packaging>pom</packaging>

    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>2.2.12.RELEASE</version>
    </parent>

    <properties>
        <java.version>1.8</java.version>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
        <maven.compiler.source>${java.version}</maven.compiler.source>
        <maven.compiler.target>${java.version}</maven.compiler.target>
        <argLine>-Dfile.encoding=UTF-8</argLine>
        <spring-boot.version>2.2.12.RELEASE</spring-boot.version>
        <spring-cloud-alibaba.version>2.2.0.RELEASE</spring-cloud-alibaba.version>
        <commons-pool2.version>2.8.1</commons-pool2.version>
        <mysql.version>5.1.48</mysql.version>
        <mybatis-spring-boot-starter.version>2.1.4</mybatis-spring-boot-starter.version>
        <pagehelper-spring-boot-starter.version>1.2.3</pagehelper-spring-boot-starter.version>
        <druid-spring-boot2.version>1.1.10</druid-spring-boot2.version>
        <hutool-all.version>5.7.17</hutool-all.version>
        <sonar-maven-plugin.version>3.6.0.1398</sonar-maven-plugin.version>
        <docker-maven-plugin.version>1.2.0</docker-maven-plugin.version>
        <swagger.version>2.7.0</swagger.version>
        <spring-boot-starter-mail.version>2.3.7.RELEASE</spring-boot-starter-mail.version>
        <excel.version>3.1.1</excel.version>
        <dubbo.version>3.0.7</dubbo.version>
        <commons-lang.version>2.6</commons-lang.version>
        <redission.version>3.16.1</redission.version>
        <logstash-logback-encoder.version>5.2</logstash-logback-encoder.version>
    </properties>

    <profiles>
        <profile>
            <id>dev</id>
            <properties>
                <docker.host>http://192.168.26.161:2375</docker.host>
                <serverId>nexus</serverId>
                <docker.registry>192.168.26.116:8082</docker.registry>
                <docker.dir>topband_back</docker.dir>
                <docker.tagname>${project.version}</docker.tagname>
            </properties>
            <activation>
                <activeByDefault>true</activeByDefault>
            </activation>
        </profile>
        <profile>
            <id>test</id>
            <properties>
                <docker.host>http://192.168.26.161:2375</docker.host>
                <serverId>nexus</serverId>
                <docker.registry>192.168.26.116:8082</docker.registry>
                <docker.dir>topband_back_test</docker.dir>
                <docker.tagname>${project.version}</docker.tagname>
            </properties>
        </profile>
        <profile>
            <id>online</id>
            <properties>
                <docker.host>http://192.168.26.161:2375</docker.host>
                <serverId>aliyuncs</serverId>
                <docker.registry>registry.cn-shenzhen.aliyuncs.com</docker.registry>
                <docker.dir>topband_back</docker.dir>
                <docker.tagname>${project.version}</docker.tagname>
            </properties>
        </profile>
    </profiles>
    <!--为了统一版本，父工程dependencyManagement锁定依赖版本，注意！！！子工程直接引用依赖，不要指定版本-->
    <dependencyManagement>
        <dependencies>
            <!--redisson-->
            <dependency>
                <groupId>org.redisson</groupId>
                <artifactId>redisson</artifactId>
                <version>${redission.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-starter-aop</artifactId>
                <version>${spring-boot.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-starter-mail</artifactId>
                <version>${spring-boot-starter-mail.version}</version>
            </dependency>
            <!--swagger-->
            <dependency>
                <groupId>io.springfox</groupId>
                <artifactId>springfox-swagger2</artifactId>
                <version>${swagger.version}</version>
            </dependency>
            <!--swagger ui-->
            <dependency>
                <groupId>io.springfox</groupId>
                <artifactId>springfox-swagger-ui</artifactId>
                <version>${swagger.version}</version>
            </dependency>
            <dependency>
                <groupId>commons-lang</groupId>
                <artifactId>commons-lang</artifactId>
                <version>${commons-lang.version}</version>
            </dependency>
            <dependency>
                <groupId>com.alibaba.cloud</groupId>
                <artifactId>spring-cloud-alibaba-dependencies</artifactId>
                <version>${spring-cloud-alibaba.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-starter-amqp</artifactId>
                <version>${spring-boot.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-starter-data-redis</artifactId>
                <version>${spring-boot.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.commons</groupId>
                <artifactId>commons-pool2</artifactId>
                <version>${commons-pool2.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-starter-web</artifactId>
                <version>${spring-boot.version}</version>
            </dependency>
            <dependency>
                <groupId>com.alibaba.cloud</groupId>
                <artifactId>spring-cloud-starter-alibaba-nacos-config</artifactId>
                <version>${spring-cloud-alibaba.version}</version>
                <!--自带的 nacos 版本是 2.0 以上的 大坑-->
                <exclusions>
                    <exclusion>
                        <groupId>com.alibaba.nacos</groupId>
                        <artifactId>nacos-client</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>
            <dependency>
                <groupId>com.alibaba.nacos</groupId>
                <artifactId>nacos-client</artifactId>
                <version>1.1.4</version>
            </dependency>
            <!-- Dubbo -->
            <dependency>
                <groupId>org.apache.dubbo</groupId>
                <artifactId>dubbo-bom</artifactId>
                <version>${dubbo.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <!-- Zookeeper -->
            <dependency>
                <groupId>org.apache.dubbo</groupId>
                <artifactId>dubbo-dependencies-zookeeper</artifactId>
                <version>${dubbo.version}</version>
                <type>pom</type>
            </dependency>
            <dependency>
                <groupId>org.mybatis.spring.boot</groupId>
                <artifactId>mybatis-spring-boot-starter</artifactId>
                <version>${mybatis-spring-boot-starter.version}</version>
            </dependency>
            <dependency>
                <groupId>mysql</groupId>
                <artifactId>mysql-connector-java</artifactId>
                <version>${mysql.version}</version>
            </dependency>
            <dependency>
                <groupId>com.github.pagehelper</groupId>
                <artifactId>pagehelper-spring-boot-starter</artifactId>
                <version>${pagehelper-spring-boot-starter.version}</version>
            </dependency>
            <dependency>
                <groupId>net.logstash.logback</groupId>
                <artifactId>logstash-logback-encoder</artifactId>
                <version>${logstash-logback-encoder.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-starter-validation</artifactId>
                <version>${spring-boot.version}</version>
            </dependency>
            <dependency>
                <groupId>com.github.drtrang</groupId>
                <artifactId>druid-spring-boot2-starter</artifactId>
                <version>${druid-spring-boot2.version}</version>
            </dependency>
            <dependency>
                <groupId>org.projectlombok</groupId>
                <artifactId>lombok</artifactId>
                <version>${lombok.version}</version>
            </dependency>
            <dependency>
                <groupId>cn.hutool</groupId>
                <artifactId>hutool-all</artifactId>
                <version>${hutool-all.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-starter-test</artifactId>
                <version>${spring-boot.version}</version>
                <scope>test</scope>
                <exclusions>
                    <exclusion>
                        <groupId>org.junit.vintage</groupId>
                        <artifactId>junit-vintage-engine</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>
            <dependency>
                <groupId>com.alibaba</groupId>
                <artifactId>easyexcel</artifactId>
                <version>${excel.version}</version>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <build>
        <pluginManagement>
            <!--为了统一插件配置，父工程pluginManagement设定了配置，注意！！！子工程直接引用，不要加配置-->
            <plugins>
                <plugin>
                    <groupId>org.sonarsource.scanner.maven</groupId>
                    <artifactId>sonar-maven-plugin</artifactId>
                    <version>${sonar-maven-plugin.version}</version>
                </plugin>
                <plugin>
                    <groupId>org.springframework.boot</groupId>
                    <artifactId>spring-boot-maven-plugin</artifactId>
                    <version>${spring-boot.version}</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-resources-plugin</artifactId>
                    <version>${maven-resources-plugin.version}</version>
                    <executions>
                        <execution>
                            <id>copy-resources</id>
                            <phase>validate</phase>
                            <goals>
                                <goal>copy-resources</goal>
                            </goals>
                            <configuration>
                                <outputDirectory>${project.basedir}/target/docker/conf</outputDirectory>
                                <resources>
                                    <resource>
                                        <directory>${project.basedir}/src/main/resources</directory>
                                        <filtering>true</filtering>
                                    </resource>
                                </resources>
                            </configuration>
                        </execution>
                    </executions>
                    <configuration>
                        <encoding>UTF-8</encoding>
                    </configuration>
                </plugin>

                <plugin>
                    <groupId>com.spotify</groupId>
                    <artifactId>docker-maven-plugin</artifactId>
                    <version>${docker-maven-plugin.version}</version>
                    <configuration>
                        <serverId>${serverId}</serverId>
                        <registryUrl>${docker.registry}</registryUrl>
                        <dockerDirectory>${project.basedir}/target/docker/conf/docker</dockerDirectory>
                        <imageTags>
                            <imageTag>${docker.tagname}</imageTag>
                        </imageTags>
                        <dockerHost>${docker.host}</dockerHost>
                        <retryPushTimeout>5000</retryPushTimeout>
                        <retryPushCount>2</retryPushCount>
                        <resources>
                            <resource>
                                <targetPath>/</targetPath>
                                <directory>${project.build.directory}</directory>
                                <include>${project.build.finalName}.jar</include>
                            </resource>
                        </resources>
                    </configuration>
                    <executions>
                        <execution>
                            <id>remove-image</id>
                            <phase>package</phase>
                            <goals>
                                <goal>removeImage</goal>
                            </goals>
                            <configuration>
                                <imageName>
                                    ${docker.dir}/${project.artifactId}
                                </imageName>
                                <removeAllTags>true</removeAllTags>
                            </configuration>
                        </execution>
                        <execution>
                            <id>remove-tag-image</id>
                            <phase>package</phase>
                            <goals>
                                <goal>removeImage</goal>
                            </goals>
                            <configuration>
                                <imageName>
                                    ${docker.registry}/${docker.dir}/${project.artifactId}
                                </imageName>
                                <removeAllTags>true</removeAllTags>
                            </configuration>
                        </execution>
                        <execution>
                            <id>build-image</id>
                            <phase>package</phase>
                            <goals>
                                <goal>build</goal>
                            </goals>
                            <configuration>
                                <imageName>${docker.dir}/${project.artifactId}:${docker.tagname}</imageName>
                            </configuration>
                        </execution>
                        <execution>
                            <id>tag-image</id>
                            <phase>deploy</phase>
                            <goals>
                                <goal>tag</goal>
                            </goals>
                            <configuration>
                                <image>${docker.dir}/${project.artifactId}:${docker.tagname}</image>
                                <newName>
                                    ${docker.registry}/${docker.dir}/${project.artifactId}:${docker.tagname}
                                </newName>
                            </configuration>
                        </execution>
                        <execution>
                            <id>tag-image-latest</id>
                            <phase>deploy</phase>
                            <goals>
                                <goal>tag</goal>
                            </goals>
                            <configuration>
                                <image>${docker.dir}/${project.artifactId}:${docker.tagname}</image>
                                <newName>
                                    ${docker.registry}/${docker.dir}/${project.artifactId}:latest
                                </newName>
                            </configuration>
                        </execution>
                        <execution>
                            <id>push-image</id>
                            <phase>deploy</phase>
                            <goals>
                                <goal>push</goal>
                            </goals>
                            <configuration>
                                <imageName>
                                    ${docker.registry}/${docker.dir}/${project.artifactId}:${docker.tagname}
                                </imageName>
                            </configuration>
                        </execution>
                        <execution>
                            <id>push-image-latest</id>
                            <phase>deploy</phase>
                            <goals>
                                <goal>push</goal>
                            </goals>
                            <configuration>
                                <imageName>
                                    ${docker.registry}/${docker.dir}/${project.artifactId}:latest
                                </imageName>
                            </configuration>
                        </execution>
                    </executions>
                </plugin>
            </plugins>
        </pluginManagement>
    </build>

    <distributionManagement>
        <repository>
            <id>nexus</id>
            <name>Releases</name>
            <url>http://192.168.26.116:8081/repository/maven-releases/</url>
        </repository>
        <snapshotRepository>
            <id>nexus</id>
            <name>Snapshots</name>
            <url>http://192.168.26.116:8081/repository/maven-snapshots/</url>
        </snapshotRepository>
    </distributionManagement>
</project>